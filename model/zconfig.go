// Code generated by agent/model/gen. DO NOT EDIT.

package model

import (
	"errors"
	"github.com/tidwall/gjson"
	"github.com/nezhahq/agent/pkg/util"
)

func (c *AgentConfig) Apply(field string, v *gjson.Result) error {
	switch field {
	case "debug":
		c.Debug = bool(v.Bool())
	case "server":
		c.Server = string(v.String())
	case "client_secret":
		c.ClientSecret = string(v.String())
	case "uuid":
		c.UUID = string(v.String())
	case "hard_drive_partition_allowlist":
		return util.Json.Unmarshal([]byte(v.Raw), &c.HardDrivePartitionAllowlist)
	case "nic_allowlist":
		return util.Json.Unmarshal([]byte(v.Raw), &c.NICAllowlist)
	case "dns":
		return util.Json.Unmarshal([]byte(v.Raw), &c.DNS)
	case "gpu":
		c.GPU = bool(v.Bool())
	case "temperature":
		c.Temperature = bool(v.Bool())
	case "skip_connection_count":
		c.SkipConnectionCount = bool(v.Bool())
	case "skip_procs_count":
		c.SkipProcsCount = bool(v.Bool())
	case "disable_auto_update":
		c.DisableAutoUpdate = bool(v.Bool())
	case "disable_force_update":
		c.DisableForceUpdate = bool(v.Bool())
	case "disable_command_execute":
		c.DisableCommandExecute = bool(v.Bool())
	case "report_delay":
		c.ReportDelay = uint32(v.Uint())
	case "tls":
		c.TLS = bool(v.Bool())
	case "insecure_tls":
		c.InsecureTLS = bool(v.Bool())
	case "use_ipv6_country_code":
		c.UseIPv6CountryCode = bool(v.Bool())
	case "use_gitee_to_upgrade":
		c.UseGiteeToUpgrade = bool(v.Bool())
	case "disable_nat":
		c.DisableNat = bool(v.Bool())
	case "disable_send_query":
		c.DisableSendQuery = bool(v.Bool())
	case "ip_report_period":
		c.IPReportPeriod = uint32(v.Uint())
	case "self_update_period":
		c.SelfUpdatePeriod = uint32(v.Uint())
	case "custom_ip_api":
		return util.Json.Unmarshal([]byte(v.Raw), &c.CustomIPApi)
	default:
		return errors.New("field name is not valid")
	}
	return nil
}
